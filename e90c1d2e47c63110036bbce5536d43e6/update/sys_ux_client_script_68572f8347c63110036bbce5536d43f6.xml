<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <controller_preset/>
        <includes/>
        <macroponent display_value="Default">60d6638347c63110036bbce5536d43a4</macroponent>
        <name>Handle Navigations</name>
        <preset/>
        <required_translations>[
    
]</required_translations>
        <script><![CDATA[/**
 * @param {params} params
 * @param {api} params.api
 * @param {any} params.event
 * @param {any} params.imports
 * @param {ApiHelpers} params.helpers
 */
function handler({
    api,
    event,
    helpers,
    imports
}) {
    // This function handle all the navigations functionality called from Custom SN_NAVIGATE_TO_STEP Event
    var orderNumber = '';
    if(event.payload.fields != undefined && event.payload.fields.orderNumber != undefined){
           orderNumber = event.payload.fields.orderNumber;
    }
    if("orderNumber" in event.payload.fields){
        delete event.payload.fields.orderNumber;
    }

    //Check if Order Id changed, If so update that in screen URL
    if ((event.payload.fields != undefined && event.payload.fields.sysId != undefined) &&
        (api.context.props.sysId !== event.payload.fields.sysId)) {
          //Retrieve Order Number

        api.emit("SCREEN_STATUS_CHANGED", {
            screenParams: { ...event.payload.fields
            },
            title:(orderNumber != '') ? orderNumber:'',
        });
    }

    //Set the title, if the form is refreshed
    if((event.payload.fields != undefined && event.payload.fields.sysId != undefined) &&
      (api.context.props.sysId === event.payload.fields.sysId) && (event.payload.route === 'select' || event.payload.route === 'invt_select') && orderNumber != ''){
        api.emit("SCREEN_STATUS_CHANGED", {
            title: orderNumber,
        });
    }
    
    var routeVal = event.payload.route;
    if (routeVal != undefined) {
        const {
            setStepperDataFromRoute
        } = imports["sn_app_orm_wksp.orderCreationUtils"]();
        setStepperDataFromRoute(api, routeVal);

        // Trigger Viewport Load Requested event to load the next page
        api.emit("MACROPONENT_VIEWPORT_LOAD_REQUESTED", {
            viewportElementId: "viewport_vrm",
            route: event.payload.route,
            fields: event.payload.fields,
            targetRoute: "current"
        });

    }

}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-10-27 18:57:56</sys_created_on>
        <sys_id>68572f8347c63110036bbce5536d43f6</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Handle Navigations</sys_name>
        <sys_package display_value="AT&amp;amp;T Workspace" source="x_876519_att_work">e90c1d2e47c63110036bbce5536d43e6</sys_package>
        <sys_policy/>
        <sys_scope display_value="AT&amp;amp;T Workspace">e90c1d2e47c63110036bbce5536d43e6</sys_scope>
        <sys_update_name>sys_ux_client_script_68572f8347c63110036bbce5536d43f6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-10-27 18:57:56</sys_updated_on>
        <target>macroponent</target>
        <type>default</type>
    </sys_ux_client_script>
</record_update>
