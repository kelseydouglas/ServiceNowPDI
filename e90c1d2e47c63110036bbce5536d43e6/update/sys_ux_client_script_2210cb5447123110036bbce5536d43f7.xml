<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <controller_preset/>
        <includes/>
        <macroponent display_value="Select default">72fa5f84479a3110036bbce5536d43d3</macroponent>
        <name>Add Delete Locations</name>
        <preset/>
        <required_translations>[
    
]</required_translations>
        <script><![CDATA[/**
 * @param {params} params
 * @param {api} params.api
 * @param {any} params.event
 * @param {any} params.imports
 * @param {ApiHelpers} params.helpers
 */
function handler({
    api,
    event,
    helpers,
    imports
}) {
    const {
        PUBLISHED
    } = imports["sn_app_orm_wksp.Constants"]();
    var selectedLocations = api.state.selectedLocations;
    switch (event.elementId) {
        case "btn_add":
            const enteredLocations = api.state.locations;
            const existingLocationAndOfferings = api.state.locationsOrders;
            var city;
            enteredLocations.forEach(function(eachLocation) {
                city = eachLocation;
                existingLocationAndOfferings[city.id] = {
                    "label": city.label,
                    "contact": { "firstName": "", "lastName": "", "email": "","phone": "" },
                    "ordersData": [ { "offerings": [], "quantity": "1" } ]
                };
                selectedLocations.push(city);
              }
            );
            
            api.emit('NOW_UXF_PAGE#ADD_NOTIFICATIONS', {
                items: [{
                    id: 'id1',
                    status: 'positive',
                    icon: 'circle-check-outline',
                    content: 'Locations have been added to the order',
                    action: {
                        type: 'dismiss'
                    }
                }]
            });
            api.setState("activeLocation", selectedLocations[0]);
            var finalLocations = [...selectedLocations];
            api.setState("selectedLocations", finalLocations);
            api.setState('locationsOrders', existingLocationAndOfferings);
            var currentItems = api.state.locationsOrders[selectedLocations[0].id].ordersData;
            api.setState("currentItems", currentItems);
            api.setState("locations", []);
            var offeringFilter = api.state.offeringFilter;
            offeringFilter.value = PUBLISHED;
            api.setState('offeringFilter', offeringFilter);
            if (api.context.props.category === 'product') {
                api.data.get_product_offerings_db.refresh();
            } else {
                api.data.get_all_cfs_specifications_db.refresh();
            }
            break;
        case "delete_locations":
            let activeLocation = api.state.activeLocation;
            let currentLocations = api.state.selectedLocations;
            let locationsOrders = api.state.locationsOrders;
            for (var ind = 0; ind < currentLocations.length; ind++) {
                if (currentLocations[ind].id == activeLocation.id) {
                    delete locationsOrders[activeLocation.id];
                    currentLocations.splice(ind, 1);
                    var finalLocation = [...currentLocations];
                    api.setState("selectedLocations", finalLocation);
                    api.setState("locationsOrders", locationsOrders);
                    if (currentLocations.length == 0) {
                        activeLocation = {};
                    } else if (currentLocations.length == 1) {
                        activeLocation = currentLocations[0];
                    } else {
                        if (ind + 1 < currentLocations.length) {
                            activeLocation = currentLocations[ind + 1];
                        } else {
                            activeLocation = currentLocations[ind - 1];
                        }
                    }
                    api.setState("activeLocation", activeLocation);
                    api.setState("currentItems", locationsOrders[activeLocation.id].ordersData);
                    break;
                }
            }
            break;
    }
}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-10-31 13:19:15</sys_created_on>
        <sys_id>2210cb5447123110036bbce5536d43f7</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Add Delete Locations</sys_name>
        <sys_package display_value="AT&amp;amp;T Workspace" source="x_876519_att_work">e90c1d2e47c63110036bbce5536d43e6</sys_package>
        <sys_policy/>
        <sys_scope display_value="AT&amp;amp;T Workspace">e90c1d2e47c63110036bbce5536d43e6</sys_scope>
        <sys_update_name>sys_ux_client_script_2210cb5447123110036bbce5536d43f7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-10-31 13:19:15</sys_updated_on>
        <target>macroponent</target>
        <type>default</type>
    </sys_ux_client_script>
</record_update>
